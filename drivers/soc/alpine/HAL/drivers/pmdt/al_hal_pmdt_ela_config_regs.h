/*
 * Copyright 2018, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */

/**
 *  @{
 * @file   al_hal_pmdt_ela_config_regs.h
 *
 * @brief pmdt_ela_config registers
 *
 * This file was auto-generated by RegGen v1.2.1
 *
 */

#ifndef __AL_HAL_PMDT_ELA_CONFIG_REGS_H__
#define __AL_HAL_PMDT_ELA_CONFIG_REGS_H__

#include "al_hal_plat_types.h"

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Unit Registers
 */

/*
 * Auxiliary register file for ELA tracker
 */
struct al_pmdt_ela_config_ela_config {
	/* [0x0] Control Register 0 - global controls */
	uint32_t ela_ctrl0;
	/* [0x4] Control Register 1 - signatures */
	uint32_t ela_ctrl1;
};

/*
 * Auxiliary register file for ELA AXI tracker
 */
struct al_pmdt_ela_config_ela_stat {
	/*
	 * [0x0] ela0 time stamp low
	 * low 32 bits
	 * Reset: 0x0         Access: RO
	 */
	uint32_t ela_tstamp_low;
	/*
	 * [0x4] ela0 time stamp high
	 * high 32 bits
	 * Reset: 0x0         Access: RO
	 */
	uint32_t ela_tstamp_high;
};

struct al_pmdt_ela_config_regs {
	/* [0x0] Auxiliary register file for ELA tracker */
	struct al_pmdt_ela_config_ela_config ela_config;
	/* [0x8] Auxiliary register file for ELA AXI tracker */
	struct al_pmdt_ela_config_ela_stat ela_stat;
	/* [0x10] */
	uint32_t rsrvd_0[16380];
};


/*
 * Registers Fields
 */

/**** ela_ctrl0 register ****/
/*
 * ARM terms for debug enable
 * Reset: 0x1         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_DBGEN (1 << 0)
/*
 * ARM terms for non invasive enable
 * Reset: 0x1         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_NIDEN (1 << 1)
/*
 * ARM terms for secured invasive enable
 * Reset: 0x1         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_SPIDEN (1 << 2)
/*
 * ARM terms for secured non invasive enable
 * Reset: 0x1         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_SPNIDEN (1 << 3)
/*
 * ARM terms for external debugger access
 * Reset: 0x0         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_EXT_DEBUG (1 << 4)
/*
 * Log reset assert events
 * Reset: 0x1         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_RST_ASSERT_LOG_EN (1 << 5)
/*
 * Log reset deassert events
 * Reset: 0x1         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_RST_DEASSERT_LOG_EN (1 << 6)
/*
 * support axi or only generic. If 1, then the first two vectors are dedicated for AXI, as well as
 * the first 3 trigger events. Only the upper vectors serve generics. If clear, all incoming sources
 * can serve generic events.
 * Reset: 0x0         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_ELA_TRACK_TYPE (1 << 7)
/*
 * override incoming events. If in AXI mode - [8] is for the request phase, [9] is for write data
 * phase, and [10] is for response phase.
 * Reset: 0x0         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_EVENT_OVRD_MASK 0x00003F00
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_EVENT_OVRD_SHIFT 8
/*
 * Enable conditional tracking state machine (enable ELA state-4 operation mode)
 * Reset: 0x0         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_ELA_COND_EN (1 << 14)
/*
 * Detach CCTM central enable. Enable locally.
 * Reset: 0x0         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_ENABLE_OVERRIDE (1 << 15)
/*
 * pause extend at reset deassertion. Power of two.
 * Reset: 0x0         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_PAUSE_EXTEND_MASK 0x000F0000
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_PAUSE_EXTEND_SHIFT 16
/*
 * reserved
 * Reset: 0x0         Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_RSVD_31_20_MASK 0xFFF00000
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL0_RSVD_31_20_SHIFT 20

/**** ela_ctrl1 register ****/
/*
 * Reset ASSErt Event signature
 * Reset: 0xa55e      Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL1_ASSERT_SIG_MASK 0x0000FFFF
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL1_ASSERT_SIG_SHIFT 0
/*
 * Reset DEASsert Event signature
 * Reset: 0xdea5      Access: RW
 */
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL1_DEASSERT_SIG_MASK 0xFFFF0000
#define PMDT_ELA_CONFIG_ELA_CONFIG_ELA_CTRL1_DEASSERT_SIG_SHIFT 16

#ifdef __cplusplus
}
#endif

#endif

/** @} */
