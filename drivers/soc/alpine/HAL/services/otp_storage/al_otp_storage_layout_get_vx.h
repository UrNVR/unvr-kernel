/*
 * Copyright 2017, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */

#ifndef	__AL_OTP_STORAGE_LAYOUT_GET_VX_H__
#define	__AL_OTP_STORAGE_LAYOUT_GET_VX_H__

#include "al_otp_storage.h"
#include "al_hal_pbs_utils.h"

void FUNC_NAME(struct al_otp_storage_layout *layout)
{
	layout->WORD_OFFSET_DEVICE_SER_NUM = OTP_FIELD_WORD_OFFSET_DEVICE_SER_NUM;
	layout->WORD_SIZE_DEVICE_SER_NUM = OTP_FIELD_WORD_SIZE_DEVICE_SER_NUM;
	layout->WORD_OFFSET_MINIMAL_SW_VER = OTP_FIELD_WORD_OFFSET_MINIMAL_SW_VER;
	layout->WORD_SIZE_MINIMAL_SW_VER = OTP_FIELD_WORD_SIZE_MINIMAL_SW_VER;
	layout->WORD_OFFSET_PUK0_MOD_HASH = OTP_FIELD_WORD_OFFSET_PUK0_MOD_HASH;
	layout->WORD_SIZE_PUK0_MOD_HASH = OTP_FIELD_WORD_SIZE_PUK0_MOD_HASH;
#if (DEV_ID >= PBS_UNIT_CHIP_ID_DEV_ID_ALPINE_V3)
	layout->WORD_OFFSET_PUK1_MOD_HASH = OTP_FIELD_WORD_OFFSET_PUK1_MOD_HASH;
	layout->WORD_SIZE_PUK1_MOD_HASH = OTP_FIELD_WORD_SIZE_PUK1_MOD_HASH;
	layout->WORD_OFFSET_PUK2_MOD_HASH = OTP_FIELD_WORD_OFFSET_PUK2_MOD_HASH;
	layout->WORD_SIZE_PUK2_MOD_HASH = OTP_FIELD_WORD_SIZE_PUK2_MOD_HASH;
	layout->WORD_OFFSET_PUK_IDX = OTP_FIELD_WORD_OFFSET_PUK_IDX;
	layout->BIT_OFFSET_PUK_IDX = OTP_FIELD_BIT_OFFSET_PUK_IDX;
	layout->WORD_OFFSET_EFUSE_PLD = OTP_FIELD_WORD_OFFSET_EFUSE_PLD;
	layout->WORD_SIZE_EFUSE_PLD = OTP_FIELD_WORD_SIZE_EFUSE_PLD;
	layout->WORD_OFFSET_PUK3_MOD_HASH = OTP_FIELD_WORD_OFFSET_PUK3_MOD_HASH;
	layout->WORD_SIZE_PUK3_MOD_HASH = OTP_FIELD_WORD_SIZE_PUK3_MOD_HASH;
#endif
	layout->WORD_OFFSET_HW_INITIATED_MEM_REPAIR = OTP_FIELD_WORD_OFFSET_HW_INITIATED_MEM_REPAIR;
	layout->BIT_OFFSET_HW_INITIATED_MEM_REPAIR = OTP_FIELD_BIT_OFFSET_HW_INITIATED_MEM_REPAIR;
#if (DEV_ID >= PBS_UNIT_CHIP_ID_DEV_ID_ALPINE_V3)
	layout->WORD_OFFSET_SW_INITIATED_MEM_REPAIR = OTP_FIELD_WORD_OFFSET_SW_INITIATED_MEM_REPAIR;
	layout->BIT_OFFSET_SW_INITIATED_MEM_REPAIR = OTP_FIELD_BIT_OFFSET_SW_INITIATED_MEM_REPAIR;
#endif
	layout->WORD_OFFSET_DIRECT_BOOT_DIS = OTP_FIELD_WORD_OFFSET_DIRECT_BOOT_DIS;
	layout->BIT_OFFSET_DIRECT_BOOT_DIS = OTP_FIELD_BIT_OFFSET_DIRECT_BOOT_DIS;
	layout->WORD_OFFSET_PRELOAD_DISABLE = OTP_FIELD_WORD_OFFSET_PRELOAD_DISABLE;
	layout->BIT_OFFSET_PRELOAD_DISABLE = OTP_FIELD_BIT_OFFSET_PRELOAD_DISABLE;
	layout->WORD_OFFSET_SPI_DBG_DISABLE = OTP_FIELD_WORD_OFFSET_SPI_DBG_DISABLE;
	layout->BIT_OFFSET_SPI_DBG_DISABLE = OTP_FIELD_BIT_OFFSET_SPI_DBG_DISABLE;
	layout->WORD_OFFSET_JTAG_DBG_DISABLE = OTP_FIELD_WORD_OFFSET_JTAG_DBG_DISABLE;
	layout->BIT_OFFSET_JTAG_DBG_DISABLE = OTP_FIELD_BIT_OFFSET_JTAG_DBG_DISABLE;
	layout->WORD_OFFSET_SECURE_BOOT_EN = OTP_FIELD_WORD_OFFSET_SECURE_BOOT_EN;
	layout->BIT_OFFSET_SECURE_BOOT_EN = OTP_FIELD_BIT_OFFSET_SECURE_BOOT_EN;
	layout->WORD_OFFSET_ROM_DBG_DIS = OTP_FIELD_WORD_OFFSET_ROM_DBG_DIS;
	layout->BIT_OFFSET_ROM_DBG_DIS = OTP_FIELD_BIT_OFFSET_ROM_DBG_DIS;
	layout->WORD_OFFSET_SNOR_SECURE_BOOT_DIS = OTP_FIELD_WORD_OFFSET_SNOR_SECURE_BOOT_DIS;
	layout->BIT_OFFSET_SNOR_SECURE_BOOT_DIS = OTP_FIELD_BIT_OFFSET_SNOR_SECURE_BOOT_DIS;
	layout->WORD_OFFSET_NAND_SECURE_BOOT_DIS = OTP_FIELD_WORD_OFFSET_NAND_SECURE_BOOT_DIS;
	layout->BIT_OFFSET_NAND_SECURE_BOOT_DIS = OTP_FIELD_BIT_OFFSET_NAND_SECURE_BOOT_DIS;
	layout->WORD_OFFSET_UART_SECURE_BOOT_DIS = OTP_FIELD_WORD_OFFSET_UART_SECURE_BOOT_DIS;
	layout->BIT_OFFSET_UART_SECURE_BOOT_DIS = OTP_FIELD_BIT_OFFSET_UART_SECURE_BOOT_DIS;
#if (DEV_ID >= PBS_UNIT_CHIP_ID_DEV_ID_ALPINE_V3)
	layout->WORD_OFFSET_UART_CLI_SECURE_BOOT_DIS =
		OTP_FIELD_WORD_OFFSET_UART_CLI_SECURE_BOOT_DIS;
	layout->BIT_OFFSET_UART_CLI_SECURE_BOOT_DIS = OTP_FIELD_BIT_OFFSET_UART_CLI_SECURE_BOOT_DIS;
	layout->WORD_OFFSET_TZ_EN = OTP_FIELD_WORD_OFFSET_TZ_EN;
	layout->BIT_OFFSET_TZ_EN = OTP_FIELD_BIT_OFFSET_TZ_EN;
	layout->WORD_OFFSET_JTAG_SOC_DISABLE = OTP_FIELD_WORD_OFFSET_JTAG_SOC_DISABLE;
	layout->BIT_OFFSET_JTAG_SOC_DISABLE = OTP_FIELD_BIT_OFFSET_JTAG_SOC_DISABLE;
	layout->WORD_OFFSET_SPI_DBG_PASW_EN = OTP_FIELD_WORD_OFFSET_SPI_DBG_PASW_EN;
	layout->BIT_OFFSET_SPI_DBG_PASW_EN = OTP_FIELD_BIT_OFFSET_SPI_DBG_PASW_EN;
	layout->WORD_OFFSET_OTPR_OVERRIDE_BY_PLD_DIS =
		OTP_FIELD_WORD_OFFSET_OTPR_OVERRIDE_BY_PLD_DIS;
	layout->BIT_OFFSET_OTPR_OVERRIDE_BY_PLD_DIS = OTP_FIELD_BIT_OFFSET_OTPR_OVERRIDE_BY_PLD_DIS;
	layout->WORD_OFFSET_CPU_DBG_AND_TRACE_DIS = OTP_FIELD_WORD_OFFSET_CPU_DBG_AND_TRACE_DIS;
	layout->BIT_OFFSET_CPU_DBG_AND_TRACE_DIS = OTP_FIELD_BIT_OFFSET_CPU_DBG_AND_TRACE_DIS;
	layout->WORD_OFFSET_SECURE_DBG_AND_TRACE_DIS =
		OTP_FIELD_WORD_OFFSET_SECURE_DBG_AND_TRACE_DIS;
	layout->BIT_OFFSET_SECURE_DBG_AND_TRACE_DIS = OTP_FIELD_BIT_OFFSET_SECURE_DBG_AND_TRACE_DIS;
	layout->WORD_OFFSET_DBG_EN = OTP_FIELD_WORD_OFFSET_DBG_EN;
	layout->BIT_OFFSET_DBG_EN = OTP_FIELD_BIT_OFFSET_DBG_EN;
	layout->BIT_MASK_SET_PUK_IDX = OTP_FIELD_BIT_MASK_SET_PUK_IDX;
	layout->WORD_OFFSET_CHIP_REVISION_ID = OTP_FIELD_WORD_OFFSET_CHIP_REV_ID;
	layout->BIT_OFFSET_CHIP_REVISION_ID = OTP_FIELD_BIT_OFFSET_CHIP_REV_ID;
	layout->BIT_MASK_SET_CHIP_REVISION_ID = OTP_FIELD_BIT_MASK_SET_CHIP_REV_ID;
#endif
	layout->BIT_MASK_SET_HW_INITIATED_MEM_REPAIR =
		OTP_FIELD_BIT_MASK_SET_HW_INITIATED_MEM_REPAIR;
#if (DEV_ID >= PBS_UNIT_CHIP_ID_DEV_ID_ALPINE_V3)
	layout->BIT_MASK_SET_SW_INITIATED_MEM_REPAIR =
		OTP_FIELD_BIT_MASK_SET_SW_INITIATED_MEM_REPAIR;
#endif
	layout->BIT_MASK_SET_DIRECT_BOOT_DIS = OTP_FIELD_BIT_MASK_SET_DIRECT_BOOT_DIS;
	layout->BIT_MASK_SET_PRELOAD_DISABLE = OTP_FIELD_BIT_MASK_SET_PRELOAD_DISABLE;
	layout->BIT_MASK_SET_SPI_DBG_DISABLE = OTP_FIELD_BIT_MASK_SET_SPI_DBG_DISABLE;
	layout->BIT_MASK_SET_JTAG_DBG_DISABLE = OTP_FIELD_BIT_MASK_SET_JTAG_DBG_DISABLE;
	layout->BIT_MASK_SET_SECURE_BOOT_EN = OTP_FIELD_BIT_MASK_SET_SECURE_BOOT_EN;
	layout->BIT_MASK_SET_ROM_DBG_DIS = OTP_FIELD_BIT_MASK_SET_ROM_DBG_DIS;
	layout->BIT_MASK_SET_SNOR_SECURE_BOOT_DIS = OTP_FIELD_BIT_MASK_SET_SNOR_SECURE_BOOT_DIS;
	layout->BIT_MASK_SET_NAND_SECURE_BOOT_DIS = OTP_FIELD_BIT_MASK_SET_NAND_SECURE_BOOT_DIS;
	layout->BIT_MASK_SET_UART_SECURE_BOOT_DIS = OTP_FIELD_BIT_MASK_SET_UART_SECURE_BOOT_DIS;
#if (DEV_ID >= PBS_UNIT_CHIP_ID_DEV_ID_ALPINE_V3)
	layout->BIT_MASK_SET_UART_CLI_SECURE_BOOT_DIS =
		OTP_FIELD_BIT_MASK_SET_UART_CLI_SECURE_BOOT_DIS;
	layout->BIT_MASK_SET_TZ_EN = OTP_FIELD_BIT_MASK_SET_TZ_EN;
	layout->BIT_MASK_SET_JTAG_SOC_DISABLE = OTP_FIELD_BIT_MASK_SET_JTAG_SOC_DISABLE;
	layout->BIT_MASK_SET_SPI_DBG_PASW_EN = OTP_FIELD_BIT_MASK_SET_SPI_DBG_PASW_EN;
	layout->BIT_MASK_SET_OTPR_OVERRIDE_BY_PLD_DIS =
		OTP_FIELD_BIT_MASK_SET_OTPR_OVERRIDE_BY_PLD_DIS;
	layout->BIT_MASK_SET_CPU_DBG_AND_TRACE_DIS = OTP_FIELD_BIT_MASK_SET_CPU_DBG_AND_TRACE_DIS;
	layout->BIT_MASK_SET_SECURE_DBG_AND_TRACE_DIS =
		OTP_FIELD_BIT_MASK_SET_SECURE_DBG_AND_TRACE_DIS;
	layout->BIT_MASK_SET_DBG_EN = OTP_FIELD_BIT_MASK_SET_DBG_EN;
#endif
}

#endif
