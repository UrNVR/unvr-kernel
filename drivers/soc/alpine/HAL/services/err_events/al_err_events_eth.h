/*
 * Copyright 2017, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */

#ifndef __AL_ERR_EVENTS_ETH_H__
#define __AL_ERR_EVENTS_ETH_H__

#include "al_err_events.h"
#include "al_err_events_eth_epe.h"

/*******************************************************************************
 ** Error ID's
 ******************************************************************************/
/*
 * EC errors ID's
 */
enum al_err_events_eth_ec {
	AL_ERR_EVENTS_ETH_EC_MS_START_IN_PACKET_ERROR = 0,
	AL_ERR_EVENTS_ETH_EC_MS_PACKET_START_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE3_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE3_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE3_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE2_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE2_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE2_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE1_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE1_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RPE1_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RXF_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RXF_LB_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RXF_LB_PACKT_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RXF_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_RXF_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_WIRE_NON_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_WIRE_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_WIRE_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_LB_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_LB_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_LB_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TMI_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TMI_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPM_NO_SOP_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPM_SPOOF_0_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPM_SPOOF_1_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPM_SPOOF_2_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPM_SPOOF_3_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPE_NO_DATA_ON_END_OF_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPE_START_IN_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TPE_END_ON_NON_PACKET_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_COUNT_END_OF_SEQ_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_LAST_IN_SHDR_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_COUNT_END_OF_PACKET_4_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_COUNT_END_OF_PACKET_3_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_COUNT_END_OF_PACKET_2_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_COUNT_END_OF_PACKET_1_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_NO_SOP_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_SAD_3_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_SAD_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_SAD_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_SAD_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TX_SAD_3_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TX_SAD_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TX_SAD_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TX_SAD_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_FIFO_1_EOP_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_FIFO_1_SOP_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_FIFO_2_EOP_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_FIFO_2_SOP_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_FIFO_1_EOP_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_FIFO_1_SOP_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TXF_VLAN_TABLE_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_CTRL_TABLE_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_VLAN_TABLE_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_THASH_TABLE_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_MHASH_TABLE_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_GCP_TABLE_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_GCP_TABLE_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TFW_GCP_TABLE_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_GCP_TABLE_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_GCP_TABLE_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_GCP_TABLE_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RFW_FLOW_FSM_TABLE_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TX_DATA_FIFO_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TX_DATA_FIFO_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_DATA_FIFO_2_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_DATA_FIFO_2_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_DATA_FIFO_1_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_RX_DATA_FIFO_1_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_META_CACHE_1_4_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_META_CACHE_1_3_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_META_CACHE_1_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TSO_META_CACHE_1_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_EC_TIMESTAMP_FIFO_OVERRUN_ERROR,
	AL_ERR_EVENTS_ETH_EC_ROCE_WRITE_ERROR,
	AL_ERR_EVENTS_ETH_EC_ROCE_READ_ERROR,
	AL_ERR_EVENTS_ETH_EC_MAX_ERRORS,
};

/*
 * MAC errors ID's
 */
enum al_err_events_eth_mac {
	AL_ERR_EVENTS_ETH_MAC_SERDES_3_TX_FIFO_ERROR = 0,
	AL_ERR_EVENTS_ETH_MAC_SERDES_2_TX_FIFO_ERROR,
	AL_ERR_EVENTS_ETH_MAC_SERDES_1_TX_FIFO_ERROR,
	AL_ERR_EVENTS_ETH_MAC_SERDES_0_TX_FIFO_ERROR,
	AL_ERR_EVENTS_ETH_MAC_SERDES_3_TX_FIFO_FULL_ERROR,
	AL_ERR_EVENTS_ETH_MAC_SERDES_2_TX_FIFO_FULL_ERROR,
	AL_ERR_EVENTS_ETH_MAC_SERDES_1_TX_FIFO_FULL_ERROR,
	AL_ERR_EVENTS_ETH_MAC_SERDES_0_TX_FIFO_FULL_ERROR,
	AL_ERR_EVENTS_ETH_MAC_XGMII_DATA_FIFO_64_32_ERROR,
	AL_ERR_EVENTS_ETH_MAC_XGMII_DATA_FIFO_64_32_FULL_ERROR,
	AL_ERR_EVENTS_ETH_MAC_XGMII_DATA_FIFO_32_64_ERROR,
	AL_ERR_EVENTS_ETH_MAC_XGMII_DATA_FIFO_32_64_FULL_ERROR,
	AL_ERR_EVENTS_ETH_MAC_1G_TX_RTSM_DATA_FIFO_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_1G_RX_DATA_FIFO_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_1G_TX_DATA_FIFO_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_TX_STATS_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_RX_STATS_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_TX_STATS_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_RX_STATS_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_RX_DATA_FIFO_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_RX_CTRL_FIFO_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_TX_DATA_FIFO_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_TX_CTRL_FIFO_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_PCS_MEM_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_PCS_LB_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_10G_PCS_DELAY_RAM_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_FEC91_DELAY_RAM_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_FEC91_DELAY_RAM_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_FEC91_RAM_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_DELAY_RAM_3_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_DELAY_RAM_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_DELAY_RAM_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_DELAY_RAM_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_MEM_3_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_MEM_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_MEM_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PCS_MEM_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PVS_DESK_3_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PVS_DESK_2_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PVS_DESK_1_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_40G_PVS_DESK_0_PARITY_ERROR,
	AL_ERR_EVENTS_ETH_MAC_MAX_ERRORS,
};

/*
 * ETH v4 EC error ID's
 */
enum al_err_events_eth_v4_ec {
	AL_ERR_EVENTS_ETH_V4_EC_ERR_MSW_IN_SOP_IN_PKT = 0,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_MSW_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FWD_OUT_EOP_META_EMPTY,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FWD_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FWD_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_PKT_HDR_FIFO_MEM_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_PKT_HDR_FIFO_MEM_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_META_FIFO_MEM_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_META_FIFO_MEM_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_META_FIFO_MEM_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_DATA_FIFO_MEM_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_DATA_FIFO_MEM_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_RXF_OUT_EOP_HDR_EMPTY,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_LBF_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_LBF_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_RXF_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_RXF_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FAF_2_OUT_EOP_HDR_EMPTY,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FAF_2_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FAF_2_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FAF_1_OUT_EOP_HDR_EMPTY,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FAF_1_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_FAF_1_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TMI_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TMI_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TFW_OUT_EOP_HDR_EMPTY,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TFW_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TFW_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_OUT_S_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPM_NO_SOP_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPM_SPOOF_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPM_SPOOF_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPM_SPOOF_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPM_SPOOF_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPE_OUT_EOP_HDR_EMPTY,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPE_IN_SOP_IN_PKT,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TPE_IN_EOP_IN_IDLE,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TSO_CNT_END_OF_SEG,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TSO_LAST_IN_SHDR,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TSO_CNT_END_OF_PKT_4,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TSO_CNT_END_OF_PKT_3,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TSO_CNT_END_OF_PKT_2,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TSO_CNT_END_OF_PKT_1,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TSO_NO_SOP_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_HS_CTRL_TABLE_PAR_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_HS_CTRL_TABLE_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_HS_CTRL_TABLE_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_HS_CTRL_TABLE_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_IN_PIPE_DATA_FIFO_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_IN_PIPE_DATA_FIFO_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TFW_OUT_SOP_INFO_EMPTY,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_EOP_FIFO_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_SOP_FIFO_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_GCP_TABLE_LO_PAR_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_GCP_TABLE_LO_PAR_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_VLAN_TABLE_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_CTRL_TABLE_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_VLAN_TABLE_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_FLOW_TABLE_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_THASH_TABLE_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_MHASH_TABLE_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_GCP_TABLE_LO_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_GCP_TABLE_LO_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_GCP_TABLE_LO_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_GCP_TABLE_LO_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_GCP_TABLE_LO_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_RFW_GCP_TABLE_LO_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_DATA_FIFO_2_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_DATA_FIFO_1_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_DATA_FIFO_2_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_TFW_DATA_FIFO_1_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_TSO_META_CACHE_1_4_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_TSO_META_CACHE_1_3_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_TSO_META_CACHE_1_2_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_TSO_META_CACHE_1_1_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_ERR_TIMESTAMP_FIFO_OVERRUN,
	AL_ERR_EVENTS_ETH_V4_EC_MAX_ERRORS,
};

#define AL_ERR_EVENTS_ETH_EC_MAX_ERRORS_FIELDS (\
	(((unsigned int)AL_ERR_EVENTS_ETH_V4_EC_MAX_ERRORS) >= \
	((unsigned int)AL_ERR_EVENTS_ETH_EC_MAX_ERRORS)) ? \
	AL_ERR_EVENTS_ETH_V4_EC_MAX_ERRORS : AL_ERR_EVENTS_ETH_EC_MAX_ERRORS)

/** EC secondary iofic fields */
enum al_err_events_eth_ec_sec {
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_4,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_5,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_6,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_TFW_GCP_TABLE_HI_PAR_ERR_7,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_4,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_5,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_6,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFW_GCP_TABLE_HI_PAR_ERR_7,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_DATA_FIFO_LO_MEM_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_DATA_FIFO_HI_MEM_PAR_ERR,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_RFW_SR_RESULT_FIFO_MEM_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_RFW_SR_RESULT_FIFO_MEM_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_RFW_SR_RESULT_FIFO_MEM_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_RFW_SR_RESULT_FIFO_MEM_PAR_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_PARSE_RES_FIFO_MEM_PAR_ERR_0,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_PARSE_RES_FIFO_MEM_PAR_ERR_1,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_PARSE_RES_FIFO_MEM_PAR_ERR_2,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_PARSE_RES_FIFO_MEM_PAR_ERR_3,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_PARSE_RES_FIFO_MEM_PAR_ERR_4,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_PARSE_RES_FIFO_MEM_PAR_ERR_5,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_RFF_PARSE_RES_FIFO_MEM_PAR_ERR_6,
	AL_ERR_EVENTS_ETH_V4_EC_SEC_MAX_ERRORS,
};

/*
 * ETH v4 MAC error ID's
 */
enum al_err_events_eth_v4_mac {
	AL_ERR_EVENTS_ETH_V4_MAC_LMAC_FF_TX_ERR_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_LMAC_FF_RX_ERR_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_LMAC_TX_UNDERFLOW_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_LMAC_STAT_PAR_ERR_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_CMAC_TX_UNDERFLOW_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_PCS_FEC91_PAR_ERR_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_PCS_FEC74_PAR_ERR_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_PCS_DESKEW_PAR_ERR_SB_SYNC_EDGE,
	AL_ERR_EVENTS_ETH_V4_MAC_MAX_ERRORS,
};

#define AL_ERR_EVENTS_ETH_V4_MAC_MAX_ERRORS_FIELDS \
	(((unsigned int)AL_ERR_EVENTS_ETH_V4_MAC_MAX_ERRORS >= \
		(unsigned int)AL_ERR_EVENTS_ETH_MAC_MAX_ERRORS) ? \
			AL_ERR_EVENTS_ETH_V4_MAC_MAX_ERRORS : AL_ERR_EVENTS_ETH_MAC_MAX_ERRORS)

/*******************************************************************************
 ** Init params
 ******************************************************************************/
struct al_err_events_eth_ec_init_params {
	/** Ethernet adapter handle */
	struct al_hal_eth_adapter *adapter;
	/** Ethernet common (shared resources) base address */
	void __iomem *eth_common_regs_base;
	/* ETH index */
	unsigned int eth_index;
	/** CPU */
	unsigned int cpu;

	/** collection mode */
	enum al_err_events_collect collect_mode;
};

/*******************************************************************************
 ** Error Data structures
 ******************************************************************************/
struct al_err_events_eth_mac_data {
	struct al_err_events_module module;

	struct al_err_events_field fields[AL_ERR_EVENTS_ETH_V4_MAC_MAX_ERRORS_FIELDS];

	void __iomem *ec_iofic_regs_base;

	/** MAC obj handle */
	struct al_eth_mac_obj *mac_obj;
	/** MAC index */
	unsigned int mac_idx;
	/** MAC interrupt bit at EC regs */
	uint32_t mac_int_bit;
};

struct al_err_events_eth_ec_sec_data {
	/* Primary EC module & fields */
	struct al_err_events_module module;

	struct al_err_events_field fields[AL_ERR_EVENTS_ETH_V4_EC_SEC_MAX_ERRORS];
	/** Ethernet adapter handle */
	struct al_hal_eth_adapter *adapter;
};

#define AL_ERR_EVENTS_ETH_EC_HAS_ADAPTER
struct al_err_events_eth_ec_data {
	/* Primary EC module & fields */
	struct al_err_events_module module;

	struct al_err_events_field fields[AL_ERR_EVENTS_ETH_EC_MAX_ERRORS_FIELDS];

	/* Submodules */
	struct al_err_events_eth_mac_data mac_data;
	struct al_err_events_eth_ec_sec_data sec_data;
	struct al_err_events_eth_epe_data epe_data;

	/** Ethernet adapter handle */
	struct al_hal_eth_adapter *adapter;
};
/*******************************************************************************
 ** API
 ******************************************************************************/
/*
 * Initialize EC error events
 *
 * @param handle Error events handle
 * @param data EC error events object
 * @param params EC initialization parameters
 *
 * @return 0 on success, errno otherwise
 */
int al_err_events_eth_ec_init(struct al_err_events_handle *handle,
			      struct al_err_events_eth_ec_data *data,
			      struct al_err_events_eth_ec_init_params *params);

#endif /* __AL_ERR_EVENTS_ETH_H__ */
