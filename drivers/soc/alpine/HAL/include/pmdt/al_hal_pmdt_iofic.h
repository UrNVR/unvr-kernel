/*
 * Copyright 2018, Amazon.com, Inc. or its affiliates. All Rights Reserved
 */
#ifndef INCLUDE_PMDT_AL_HAL_PMDT_IOFIC_H_
#define INCLUDE_PMDT_AL_HAL_PMDT_IOFIC_H_

/** Group A */
#define AL_PMDT_INT_GROUP_A_PMU_ADAPT_SSMAE_0					AL_BIT(0)
#define AL_PMDT_INT_GROUP_A_PMU_ADAPT_SSMAE_1					AL_BIT(1)
#define AL_PMDT_INT_GROUP_A_ELA_0_ADAPT_SSMAE_0					AL_BIT(2)
#define AL_PMDT_INT_GROUP_A_ELA_0_ADAPT_SSMAE_1					AL_BIT(3)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_0_SSMAE_0					AL_BIT(4)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_1_SSMAE_0					AL_BIT(5)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_2_SSMAE_0					AL_BIT(6)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_3_SSMAE_0					AL_BIT(7)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_0_SSMAE_1					AL_BIT(8)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_1_SSMAE_1					AL_BIT(9)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_2_SSMAE_1					AL_BIT(10)
#define AL_PMDT_INT_GROUP_A_PMU_UDMA_3_SSMAE_1					AL_BIT(11)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_0_SSMA_0					AL_BIT(12)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_1_SSMA_0					AL_BIT(13)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_2_SSMA_0					AL_BIT(14)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_3_SSMA_0					AL_BIT(15)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_0_SSMA_1					AL_BIT(16)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_1_SSMA_1					AL_BIT(17)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_2_SSMA_1					AL_BIT(18)
#define AL_PMDT_INT_GROUP_A_ELA_UDMA_3_SSMA_1					AL_BIT(19)
#define AL_PMDT_INT_GROUP_A_PMU_ADAPT_ETH_10_0					AL_BIT(20)
#define AL_PMDT_INT_GROUP_A_ELA_0_ADAPT_OR_ELA_1_ADPT_ETH_10_0			AL_BIT(21)
#define AL_PMDT_INT_GROUP_A_PMU_ADAPT_ETH_10_1					AL_BIT(22)
#define AL_PMDT_INT_GROUP_A_PMU_EC_0_ETH_100_0					AL_BIT(23)
#define AL_PMDT_INT_GROUP_A_PMU_NBC						AL_BIT(24)
#define AL_PMDT_INT_GROUP_A_ELA_EC_0_ETH_100_0					AL_BIT(25)
#define AL_PMDT_INT_GROUP_A_PMU_EC_1_ETH_100_0					AL_BIT(26)
#define AL_PMDT_INT_GROUP_A_ELA_EC_1_ETH_100_0					AL_BIT(27)
#define AL_PMDT_INT_GROUP_A_PMU_DDR_CONTROLER_0					AL_BIT(28)
#define AL_PMDT_INT_GROUP_A_PMU_DDR_CONTROLER_1					AL_BIT(29)
#define AL_PMDT_INT_GROUP_A_ELA_DDR_CONTROLER_0					AL_BIT(30)
#define AL_PMDT_INT_GROUP_A_ELA_DDR_CONTROLER_1					AL_BIT(31)

/** Group B */
#define AL_PMDT_INT_GROUP_B_PMU_ADAPT_ETH_100_0					AL_BIT(0)
#define AL_PMDT_INT_GROUP_B_PMU_ADAPT_ETH_100_1					AL_BIT(1)
#define AL_PMDT_INT_GROUP_B_PMU_ADAPT_ETH_100_2					AL_BIT(2)
#define AL_PMDT_INT_GROUP_B_PMU_ADAPT_ETH_100_3					AL_BIT(3)
#define AL_PMDT_INT_GROUP_B_ELA_0_ADAPT_ETH_100_0					AL_BIT(4)
#define AL_PMDT_INT_GROUP_B_ELA_0_ADAPT_ETH_100_1					AL_BIT(5)
#define AL_PMDT_INT_GROUP_B_ELA_0_ADAPT_ETH_100_2					AL_BIT(6)
#define AL_PMDT_INT_GROUP_B_ELA_0_ADAPT_ETH_100_3					AL_BIT(7)
#define AL_PMDT_INT_GROUP_B_PMU_UDMA_ETH_100_0					AL_BIT(8)
#define AL_PMDT_INT_GROUP_B_PMU_UDMA_ETH_100_1					AL_BIT(9)
#define AL_PMDT_INT_GROUP_B_PMU_UDMA_ETH_100_2					AL_BIT(10)
#define AL_PMDT_INT_GROUP_B_PMU_UDMA_ETH_100_3					AL_BIT(11)
#define AL_PMDT_INT_GROUP_B_ELA_UDMA_ETH_100_0					AL_BIT(12)
#define AL_PMDT_INT_GROUP_B_ELA_UDMA_ETH_100_1					AL_BIT(13)
#define AL_PMDT_INT_GROUP_B_ELA_UDMA_ETH_100_2					AL_BIT(14)
#define AL_PMDT_INT_GROUP_B_ELA_UDMA_ETH_100_3					AL_BIT(15)
#define AL_PMDT_INT_GROUP_B_PMU_EC_2_ETH_100_0					AL_BIT(16)
#define AL_PMDT_INT_GROUP_B_ELA_EC_2_ETH_100_0					AL_BIT(17)
#define AL_PMDT_INT_GROUP_B_PMU_SHARED_RESOURCE_ETH_100_0			AL_BIT(18)
#define AL_PMDT_INT_GROUP_B_ELA_SHARED_RESOURCE_ETH_100_0			AL_BIT(19)
#define AL_PMDT_INT_GROUP_B_PMU_SHARED_CACHE_ETH_100_0				AL_BIT(20)
#define AL_PMDT_INT_GROUP_B_ELA_SHARED_CACHE_ETH_100_0				AL_BIT(21)
#define AL_PMDT_INT_GROUP_B_PMU_EC_3_ETH_100_0					AL_BIT(22)
#define AL_PMDT_INT_GROUP_B_ELA_EC_3_ETH_100_0					AL_BIT(23)
#define AL_PMDT_INT_GROUP_B_PMU_CPU_CLUSTER_0					AL_BIT(24)
#define AL_PMDT_INT_GROUP_B_PMU_CPU_CLUSTER_1					AL_BIT(25)
#define AL_PMDT_INT_GROUP_B_PMU_CPU_CLUSTER_2					AL_BIT(26)
#define AL_PMDT_INT_GROUP_B_PMU_CPU_CLUSTER_3					AL_BIT(27)
#define AL_PMDT_INT_GROUP_B_ELA_CPU_CLUSTER_0					AL_BIT(28)
#define AL_PMDT_INT_GROUP_B_ELA_CPU_CLUSTER_1					AL_BIT(29)
#define AL_PMDT_INT_GROUP_B_ELA_CPU_CLUSTER_2					AL_BIT(30)
#define AL_PMDT_INT_GROUP_B_ELA_CPU_CLUSTER_3					AL_BIT(31)

/** Group C */
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_0					AL_BIT(0)
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_1					AL_BIT(1)
#define AL_PMDT_INT_GROUP_C_ELA_0_ADAPT_SATA_0					AL_BIT(2)
#define AL_PMDT_INT_GROUP_C_ELA_ADAPT_SATA_1					AL_BIT(3)
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_2					AL_BIT(4)
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_3					AL_BIT(5)
#define AL_PMDT_INT_GROUP_C_ELA_ADAPT_SATA_2					AL_BIT(6)
#define AL_PMDT_INT_GROUP_C_ELA_ADAPT_SATA_3					AL_BIT(7)
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_4					AL_BIT(8)
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_5					AL_BIT(9)
#define AL_PMDT_INT_GROUP_C_ELA_ADAPT_SATA_4					AL_BIT(10)
#define AL_PMDT_INT_GROUP_C_ELA_ADAPT_SATA_5					AL_BIT(11)
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_6					AL_BIT(12)
#define AL_PMDT_INT_GROUP_C_PMU_ADAPT_SATA_7					AL_BIT(13)
#define AL_PMDT_INT_GROUP_C_ELA_ADAPT_SATA_6					AL_BIT(14)
#define AL_PMDT_INT_GROUP_C_ELA_ADAPT_SATA_7					AL_BIT(15)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_0					AL_BIT(16)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_1					AL_BIT(17)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_2					AL_BIT(18)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_3					AL_BIT(19)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_4					AL_BIT(20)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_5					AL_BIT(21)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_6					AL_BIT(22)
#define AL_PMDT_INT_GROUP_C_PMU_PCIECORE_7					AL_BIT(23)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_0					AL_BIT(24)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_1					AL_BIT(25)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_2					AL_BIT(26)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_3					AL_BIT(27)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_4					AL_BIT(28)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_5					AL_BIT(29)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_6					AL_BIT(30)
#define AL_PMDT_INT_GROUP_C_ELA_PCIECORE_7					AL_BIT(31)

/** Group D */
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_0					AL_BIT(0)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_1					AL_BIT(1)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_2					AL_BIT(2)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_3					AL_BIT(3)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_4					AL_BIT(4)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_5					AL_BIT(5)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_6					AL_BIT(6)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_SLVAXI_7					AL_BIT(7)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_0					AL_BIT(8)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_1					AL_BIT(9)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_2					AL_BIT(10)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_3					AL_BIT(11)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_4					AL_BIT(12)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_5					AL_BIT(13)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_6					AL_BIT(14)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_SLVAXI_7					AL_BIT(15)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_0					AL_BIT(16)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_1					AL_BIT(17)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_2					AL_BIT(18)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_3					AL_BIT(19)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_4					AL_BIT(20)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_5					AL_BIT(21)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_6					AL_BIT(22)
#define AL_PMDT_INT_GROUP_D_PMU_PCIE_MSTRAXI_7					AL_BIT(23)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_0					AL_BIT(24)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_1					AL_BIT(25)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_2					AL_BIT(26)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_3					AL_BIT(27)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_4					AL_BIT(28)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_5					AL_BIT(29)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_6					AL_BIT(30)
#define AL_PMDT_INT_GROUP_D_ELA_PCIE_MSTRAXI_7					AL_BIT(31)

/**
 * Get error interrupt masks for PMDT
 *
 * @param handle private data struct
 * This is a placeholder for a future possible pmdt handle
 * @param a mask for group a
 * @param b mask for group b
 * @param c mask for group c
 * @param d mask for group d
 */
void al_pmdt_iofic_error_masks_get(void *handle,
		uint32_t *a, uint32_t *b, uint32_t *c, uint32_t *d);

/**
 * Unmask error interrupt
 *
 * @param handle iofic register base address
 * can be relaced in the future with a pmdt handle that holds the iofic base
 */
void al_pmdt_iofic_error_ints_unmask(void *handle);

#endif /* INCLUDE_PMDT_AL_HAL_PMDT_IOFIC_H_ */
